<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="22.05.0.0">
<procedure name="main">
<interface/>
<body>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">read_image (Image, '/Users/yishuinanfeng/Desktop/projects/halconPorjects/image/concave.bmp')</l>
<c>*** 先找出圆环部分，通过闭运算补上内部的小孔洞</c>
<l>threshold (Image, Regions, 146, 255)</l>
<l>closing_circle (Regions, RegionClosing, 4.5)</l>
<c>*** 过滤一些干扰的小噪声点 </c>
<l>select_shape (RegionClosing, SelectedRegions, ['area','circularity'], 'and', [39818.7,0.0401], [47901.6,0.0633])</l>
<c>*** 在原图上抠出圆环部分</c>
<l>reduce_domain (Image, SelectedRegions, ImageReduced)</l>
<c>*** 找出圆环中的边缘（先高斯模糊，然后求导找到边缘，属于简单不精确的边缘检测）</c>
<l>derivate_gauss (ImageReduced, DerivGauss, 1.5, 'gradient')</l>
<c>*** 找出真正属于圆环的边缘</c>
<l>threshold (DerivGauss, Regions1, 13.305, 50)</l>
<c>*** 将边缘断掉的部分补上</c>
<l>closing_circle (Regions1, RegionClosing1, 3.5)</l>
<c>*** 拆解为不同区域</c>
<l>connection (RegionClosing1, ConnectedRegions)</l>
<c>*** 找出最大的区域，即外圆环边缘（包含凹陷部分边缘）</c>
<l>select_shape_std (ConnectedRegions, SelectedRegionsLargest, 'max_area', 70)</l>
<c>*** 填充外圆环边缘</c>
<l>fill_up (SelectedRegionsLargest, RegionFillUp)</l>
<c>*** 求填充好的图像和外圆环边缘的差分，即大圆中间包含被凹陷边缘分割边缘</c>
<l>difference (RegionFillUp, SelectedRegionsLargest, RegionDifference)</l>
<c>*** 拆解为不同区域</c>
<l>connection (RegionDifference, ConnectedRegions1)</l>
<c>*** 选择出面积小区域，即凹陷部分区域</c>
<l>select_shape (ConnectedRegions1, RegionsDetect, 'area', 'and', 0, 1088.08)</l>
<c></c>
<l>dev_display (Image)</l>
<l>dev_display (RegionsDetect)</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
