<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="22.05.0.0">
<procedure name="main">
<interface/>
<body>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">read_image (Image, '/Users/yishuinanfeng/Desktop/projects/halconPorjects/image/slightDefect.bmp')</l>
<c></c>
<l>dev_close_window ()</l>
<c></c>
<l>dev_update_off ()</l>
<c></c>
<l>get_image_size (Image, Width, Height)</l>
<c></c>
<l>dev_open_window (0, 0, Width, Height, 'black', WindowHandle)</l>
<c></c>
<l>* dev_set_draw ('margin')</l>
<c></c>
<l>dev_set_line_width (1)</l>
<c></c>
<l>dev_set_colored (12)</l>
<c></c>
<l>optimize_rft_speed (Width, Height, 'standard')</l>
<c></c>
<l>Sigma1 := 10.0</l>
<l>Sigma2 := 2.0</l>
<c></c>
<l>gen_gauss_filter (ImageGauss1, Sigma1, Sigma1, 0, 'none', 'rft', Width, Height)</l>
<l>gen_gauss_filter (ImageGauss2, Sigma2, Sigma2, 0, 'none', 'rft', Width, Height)</l>
<c>*** 在图像处理中，高斯滤波器通常用于平滑图像，减少图像中的噪声和细节。当我们对两个高斯滤波器进行相减时，实际上是在对图像进行高通滤波操作，这有助于突出图像中的高频信息。</c>
<l>sub_image (ImageGauss1, ImageGauss2, ImageSubGauss, 1, 0)</l>
<c></c>
<l>rgb1_to_gray (Image, GrayImage)</l>
<c>*** 反转灰度图像可以使图像中的特定特征更加突出</c>
<l>invert_image (GrayImage, ImageInvert)</l>
<c>*** - 'none'：表示不进行归一化。在这种情况下，傅里叶变换的结果不进行缩放，保持原始的幅度值。</c>
<c></c>
<c>*** - 'sqrt'：表示进行平方根归一化。在这种情况下，傅里叶变换的结果会除以图像宽度和高度的平方根，以保持幅度值的一致性。</c>
<c></c>
<c>*** - 'to_center'：表示将零频分量移到频谱的中心。这种归一化方式通常用于频谱可视化，使频谱的中心对应于图像的中心。</c>
<c></c>
<c>*** - 'to_border'：表示将零频分量移到频谱的边缘。这种归一化方式通常用于频谱分析，使频谱的边缘对应于图像的边缘。</c>
<c></c>
<l>rft_generic (ImageInvert, ImageFFT, 'to_freq', 'sqrt', 'complex', Width)</l>
<c></c>
<l>convol_fft (ImageFFT, ImageSubGauss, ImageConvol)</l>
<c></c>
<l>rft_generic (ImageConvol, ImageFFT1, 'from_freq', 'n', 'real', Width)</l>
<c></c>
<l>gen_rectangle1 (Rectangle, 20, 20, Height-20, Width-20)</l>
<c>*** 这里reduce_domain图像整体为啥变黑了？？？</c>
<l>reduce_domain (ImageFFT1, Rectangle, ImageReduced)</l>
<c>*** 中值滤波去除随机噪声点</c>
<l>median_image (ImageReduced, ImageMedian, 'circle', 20, 'mirrored')</l>
<c>*** 高斯平滑去除高斯噪声</c>
<l>smooth_image (ImageMedian, ImageSmooth, 'gauss', 8)</l>
<c></c>
<l>threshold (ImageSmooth, Regions1, -0.000942, -0.000242)</l>
<c></c>
<l>connection (Regions1, ConnectedRegions)</l>
<c></c>
<l>select_shape (ConnectedRegions, SelectedRegions, 'circularity', 'and', 0.87927, 1)</l>
<c>*** 将缺点区域拟合为圆</c>
<l>gen_contour_region_xld (SelectedRegions, Contours, 'border')</l>
<c></c>
<l>fit_circle_contour_xld (Contours, 'algebraic', -1, 0, 0, 3, 2, Row, Column, Radius, StartPhi, EndPhi, PointOrder)</l>
<c></c>
<l>gen_circle_contour_xld (ContCircle, Row, Column, Radius, StartPhi, EndPhi, 'positive', 1)</l>
<c></c>
<l>dev_clear_window ()</l>
<c></c>
<l>dev_display (Image)</l>
<c></c>
<l>dev_display (ContCircle)</l>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
