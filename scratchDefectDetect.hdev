<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="22.05.0.0">
<procedure name="main">
<interface/>
<body>
<l>dev_close_window ()</l>
<c></c>
<l>dev_update_off ()</l>
<c></c>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">read_image (Image, '/Users/yishuinanfeng/Desktop/projects/halconPorjects/image/mura_defects_blur_01.png')</l>
<c></c>
<l>get_image_size (Image, Width, Height)</l>
<c></c>
<l>dev_open_window_fit_size (0, 0, Width, Height, 640, 480, WindowHandle)</l>
<c></c>
<l>set_display_font (WindowHandle, 16, 'mono', 'true', 'false')</l>
<c></c>
<l>dev_set_draw ('margin')</l>
<c></c>
<l>dev_set_line_width (1)</l>
<c></c>
<l>dev_set_color ('blue')</l>
<c></c>
<l>calculate_lines_gauss_parameters (17, [25,3], Sigma, Low, High)</l>
<c></c>
<l>rgb3_to_gray (Image, Image, Image, ImageGray)</l>
<c>*******   - Image：输入图像，可以是灰度图像。</c>
<c>******* - Direction：变换的方向。'to_freq'表示正向变换（从空间域到频率域），'from_freq'表示逆向变换（从频率域到空间域）。</c>
<c>*******- Norm：变换时的归一化方法。例如，'none'表示不进行归一化，'dc'表示将直流分量（DC分量）归一化到特定的值。</c>
<c>*******- ResultType：指定输出结果的类型。例如，'complex'表示输出复数结果，'magnitude_phase'表示输出幅度和相位。</c>
<c>*******- Width：当进行逆向变换时，指定输出图像的宽度。这是因为在频率域进行操作可能会改变图像的尺寸     *********</c>
<l>rft_generic (ImageGray, ImageFFT, 'to_freq', 'none', 'complex', Width)</l>
<l>gen_gauss_filter (ImageGauss, 100, 100, 0, 'n', 'rft', Width, Height)</l>
<c>*** gen_gauss_filter函数生成的ImageGauss是一个灰度图像，</c>
<c>***其中每个像素的值代表滤波器在该位置的权重。尽管它是以灰度图像的形式表示，</c>
<c>***但本质上它描述了一个滤波函数，这个函数在空间域中具有高斯分布的形状。</c>
<c></c>
<c>**convol_fft函数在频率域中应用滤波器。虽然ImageGauss是以灰度图像的形式提供的，</c>
<c>**但在频率域滤波的上下文中，它被解释为滤波函数。这意味着ImageGauss描述的高斯分布被应</c>
<c>**用于ImageFFT的频率成分，实现了频率域的滤波效果。</c>
<l>convol_fft (ImageFFT, ImageGauss, ImageConvol)</l>
<l>rft_generic (ImageConvol, ImageFFT1, 'from_freq', 'none', 'byte', Width)</l>
<c>*** g' := (ImageFFT1 - ImageGray) * Mult + Add</c>
<l>sub_image (ImageGray, ImageFFT1, ImageSub, 2, 128)</l>
<c></c>
<l>* scaleFactor := 0.4</l>
<l>* zoom_image_factor (ImageSub, ImageZoomed, scaleFactor, scaleFactor, 'constant')</l>
<l>* get_domain (ImageZoomed, Domain)</l>
<l>* reduce_domain (ImageSub, Domain, ImageReduced)</l>
<c></c>
<l>lines_gauss (ImageSub, Lines, Sigma, Low, High, 'dark', 'true', 'gaussian', 'true')</l>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
