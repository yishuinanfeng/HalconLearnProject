<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="22.05.0.0">
<procedure name="main">
<interface/>
<body>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">read_image (Image, '/Users/Shared/Library/Application Support/HALCON-22.05-Progress/examples/images/mine/pins.png')</l>
<l>get_image_size (Image, Width, Height)</l>
<l>dev_close_window ()</l>
<l>dev_open_window (0, 0, 800, 512, 'black', WindowHandle)</l>
<c></c>
<l>dev_display (Image)</l>
<c></c>
<c>*** 整体思路：先抠出引脚区域，阈值分割出引脚，生成每个引脚的最小外接矩形，</c>
<c>*** 测量相邻外接矩形之间中心点的距离，距离小于阈值的认为是短路</c>
<c></c>
<l>threshold (Image, Region,0, 128)</l>
<c></c>
<l>gen_rectangle2 (Rectangle, Height/3, Width, 0, Width, Height/3-20)</l>
<c></c>
<l>reduce_domain (Image, Rectangle, ImageReduced)</l>
<c></c>
<l>crop_domain (ImageReduced, ImagePart)</l>
<c></c>
<l>threshold (ImagePart, Region1, 0, 128)</l>
<c></c>
<l>connection (Region1, ConnectedRegions)</l>
<l>opening_rectangle1 (ConnectedRegions, RegionOpening, 3, 3)</l>
<c></c>
<l>smallest_rectangle2 (RegionOpening, Row, Column, Phi, Length1, Length2)</l>
<c></c>
<l>gen_rectangle2 (Rectangle1, Row, Column, Phi, Length1, Length2)</l>
<c></c>
<l>* shape_trans (Rectangle1, RegionTrans, 'inner_rectangle1')</l>
<c></c>
<l>sort_region (Rectangle1, SortedRegions, 'character', 'true', 'row')</l>
<c></c>
<l>count_obj (SortedRegions, Number)</l>
<c></c>
<l>set_display_font (WindowHandle, 18, 'mono', 'true', 'false')</l>
<l>for Index := 1 to Number-1 by 1</l>
<l>    select_obj (SortedRegions, ObjectSelected, Index)</l>
<l>    area_center (ObjectSelected, Area, Row1, Column1)</l>
<c>    </c>
<l>    select_obj (SortedRegions, ObjectSelected1, Index+1)</l>
<l>    area_center (ObjectSelected1, Area1, Row2, Column2)</l>
<c>    </c>
<l>    distance_pp (Row1, Column1, Row2, Column2, Distance)</l>
<c>    </c>
<l>    gen_region_line (RegionLines, Row1, Column1, Row2, Column2)</l>
<l>    disp_message (WindowHandle, Distance, 'image', Row1-20, Column1, 'black', 'true')</l>
<c>    </c>
<l>    if (Distance &lt; 104)</l>
<l>        disp_message (WindowHandle, 'NG', 'image', Row1, Column1+20, 'red', 'true')</l>
<l>    endif</l>
<c>    </c>
<l>endfor</l>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
