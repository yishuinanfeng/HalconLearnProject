<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="22.05.0.0">
<procedure name="main">
<interface/>
<body>
<l>dev_get_window (WindowHandle)</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">* read_image (Image, '/Users/Shared/Library/Application Support/HALCON-22.05-Progress/examples/images/bonds/ball_bond_ccd_02.png')</l>
<l>read_image (Ball, '/Users/yishuinanfeng/Desktop/ball.png')</l>
<l>decompose3 (Ball, Image1, Image2, Image3)</l>
<c></c>
<l>* gen_rectangle1 (ROI_0, 142.765, 492.588, 1027.46, 907.967)</l>
<l>* reduce_domain (Image, ROI_0, ImageReduced)</l>
<l>min_max_gray(Image1, Image1, 0, Min, Max, Range)</l>
<l>threshold (Image1, Region, 0, Min+30)</l>
<l>* erosion_circle (Region, RegionErosion, 13.5)</l>
<l>opening_circle (Region, RegionOpening, 8)</l>
<c>*如果内部有空洞，则半径小于mask半径的空洞会被填充</c>
<l>* closing_circle (Region, RegionClosing, 13.5)</l>
<c>*内部空洞都会被填充</c>
<l>* fill_up (RegionOpening, RegionFillUp)</l>
<l>connection (RegionOpening, ConnectedRegions)</l>
<l>fill_up (ConnectedRegions, RegionFillUp)</l>
<l>* circularity (ConnectedRegions, Circularity)</l>
<c></c>
<c>*第一种方式：直接通过特征过滤圆度和矩形度，删除矩形区域</c>
<l>* select_shape (ConnectedRegions, SelectedRegions, ['circularity','rectangularity'], 'and', [0.16858,0.73601], [0.92176,0.85941])</l>
<c>*第二种方式：找出矩形度高的区域，用</c>
<l>select_shape_std (ConnectedRegions, SelectedRegionsResult, 'rectangle1', 70)</l>
<l>difference (ConnectedRegions, SelectedRegionsResult, RegionDifference)</l>
<c>*第一种方式</c>
<l>* inner_circle (SelectedRegionsResult, Row, Column, Radius)</l>
<c>*第二种方式</c>
<l>inner_circle (RegionDifference, Row, Column, Radius)</l>
<l>gen_circle (Circle, Row, Column, Radius)</l>
<l>dev_display (Circle)</l>
<l>dev_display(Ball)</l>
<c>*显示图像</c>
<l>count_obj (Circle, Number)</l>
<c>*计算区域个数</c>
<l>for Index := 1 to Number by 1</l>
<c>*for循环</c>
<l>select_obj (Circle, CurrentRect, Index)</l>
<c>*计算objects的个数</c>
<l>dev_display (CurrentRect)</l>
<c>*显示对象</c>
<l>area_center (CurrentRect, Area, Row, Column)</l>
<c>*计算区域的面积和中心坐标</c>
<l>disp_message (WindowHandle, ' ' + Index, 'image', Row+30, Column-20, 'black', 'true') </l>
<c>*在图形窗口中显示排序的数字</c>
<l>endfor</l>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
